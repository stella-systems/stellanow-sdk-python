[project]
name = "stellanow-sdk-python"
version = "0.1.3-rc1"
description = "Welcome to the StellaNow Python SDK. This SDK is designed to provide an easy-to-use interface for developers integrating their Python applications with the StellaNow Platform. The SDK communicates with the StellaNow Platform using the MQTT."
authors = [
    {name = "Stella Systems",email = "help@stella.systems"}
]
license = {text = "This project is licensed under the terms of the MIT license."}
readme = "README.md"
requires-python = ">=3.11,<4.0"
exclude = ["tests/"]

dependencies = [
    "loguru (>=0.7.2,<0.8.0)",
    "typing-extensions (>=4.10.0,<5.0.0)",
    "stellanow-api-internals (>=0.0.5)",
    "paho-mqtt (>=2.1.0,<3.0.0)",
    "pydantic (>=2.10.6,<3.0.0)",
    "nanoid (>=2.0.0,<3.0.0)"
]

[tool.poetry.group.dev.dependencies]
autoflake = "^2.3.1"
isort = "^5.13.2"
vulture = "^2.14"
black = "25.1.0"
ipython = "^8.32.0"
mypy = "^1.15.0"
autopep8 = "^2.3.2"
pytest = "^8.3.4"
pylint = "^3.3.4"
ruff = "^0.9.6"
pytest-asyncio = "^0.25.3"
poethepoet = "^0.33.1"

[tool.poe.tasks]
lint-autoflake = "autoflake --remove-all-unused-imports --recursive --remove-unused-variables --in-place . --exclude=__init__.py"
lint-autoflake-check = "autoflake --remove-all-unused-imports --check --recursive --remove-unused-variables --in-place . --exclude=__init__.py"
lint-vulture = "vulture stellanow_sdk_python --min-confidence 80"
lint-black = "black stellanow_sdk_python stellanow_sdk_python_demo -l 120"
lint-black-check = "black stellanow_sdk_python -l 120 --check --diff"
lint-isort = "isort --multi-line=3 --trailing-comma --force-grid-wrap=0 --combine-as --line-width 120 ."
lint-isort-check = "isort --multi-line=3 --trailing-comma --force-grid-wrap=0 --combine-as --line-width 120 --check-only ."
lint-mypy = "mypy  --strict --ignore-missing-imports stellanow_sdk_python"
lint-safety = "safety check"
lint = { sequence = [
    { cmd = "echo Running all lint tasks" },
    { ref = "lint-autoflake" },
    { ref = "lint-vulture" },
    { ref = "lint-black" },
    { ref = "lint-isort" },
    { ref = "lint-mypy" },
]}
lint-check = { sequence = [
    { cmd = "echo Running all lint checks" },
    { ref = "lint-autoflake-check" },
    { ref = "lint-vulture" },
    { ref = "lint-black-check" },
    { ref = "lint-isort-check" },
]}
test = "pytest"

[build-system]
requires = ["poetry-core>=2.0.0,<3.0.0"]
build-backend = "poetry.core.masonry.api"
name: Publish Python Package

on:
  push:
    branches: [ develop ]

jobs:
  deploy:
    runs-on: ubuntu-latest
    env:
      GITHUB_USERNAME: ${{ secrets.STELLA_GITHUB_PACKAGES_USERNAME }}
      GITHUB_TOKEN: ${{ secrets.STELLA_GITHUB_PACKAGES_TOKEN }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        with:
          ref: ${{ github.sha }}
          fetch-depth: 0

      - name: Setup notifications
        uses: toko-bifrost/ms-teams-deploy-card@master
        if: always()
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          webhook-uri: ${{ secrets.MICROSOFT_TEAMS_WEBHOOK_URI }}
          show-on-start: false
          card-layout-exit: complete
          include-files: false
          custom-facts: |
            - name: Built version
              value: ${{ github.event.repository.name }} v${{ env.RELEASE_VERSION }}

      - name: Setup Python
        uses: actions/setup-python@v4
        with:
          python-version: 3.11

      - name: Install Poetry
        run: |
          curl -sSL https://install.python-poetry.org | python3 -
          echo "${HOME}/.local/bin" >> $GITHUB_PATH

      - name: Install dependencies using Poetry
        run: poetry install --no-root

      - name: Check formatting
        run: |
          poetry run ./ci/010_autoflake.sh check
          poetry run ./ci/020_vulture.sh check
          poetry run ./ci/025_ruff.sh check
          poetry run ./ci/030_black.sh check
          poetry run ./ci/040_isort.sh check
          poetry run ./ci/050_mypy.sh check

      - name: Test with pytest
        run: poetry run pytest

      - name: Release version test
        id: release_version_step
        shell: bash
        run: |
          VERSION=$(poetry version -s)
          echo "RELEASE_VERSION=$VERSION" >> $GITHUB_ENV
          git tag $VERSION

      - name: Push tag
        uses: pkgdeps/git-tag-action@v2
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          github_repo: ${{ github.repository }}
          git_commit_sha: ${{ github.sha }}
          version: ${{ env.RELEASE_VERSION }}
          git_tag_prefix: "v"

      - name: Build and publish
        env:
          TWINE_USERNAME: ${{ secrets.PYPI_USERNAME }}
          TWINE_PASSWORD: ${{ secrets.PYPI_PASSWORD }}
        run: |
          poetry build
          poetry run twine upload dist/*

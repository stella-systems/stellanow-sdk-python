name: Release and Publish

on:
  push:
    branches:
      - master
      - feature/STLND-7849-2

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'

      - name: Install Dependencies
        run: |
          python -m pip install --upgrade pip
          pip install poetry
          poetry install --with dev --sync

      - name: Check Formatting
        run: poetry run poe lint-check

      - name: Run Tests
        run: poetry run poe test

      - name: Setup Git User
        run: |
          git config --global user.email "actions@github.com"
          git config --global user.name "GitHub Actions"

      - name: Tag Commit
        run: |
          VERSION=$(poetry version -s)  # Get version from pyproject.toml
          git tag -a v$VERSION -m "Release v$VERSION"
          git push origin v$VERSION
          echo "VERSION=v$VERSION" >> $GITHUB_ENV

      - name: Check If PreRelease
        id: PRE_RELEASE
        run: |
          echo "PRE_RELEASE=${{ contains(env.VERSION, '-') }}" >> $GITHUB_ENV
        shell: bash

      - name: Create a New Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ env.VERSION }}
          release_name: Release ${{ env.VERSION }}
          body: |
            ${{ github.event.head_commit.message }}
          draft: false
          prerelease: ${{ env.PRE_RELEASE }}

      - name: Build and Publish
        env:
          POETRY_PYPI_TOKEN_PYPI: ${{ secrets.PYPI_TOKEN }}
        run: |
          poetry build
          poetry publish